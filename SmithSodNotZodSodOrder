//Program Documentation
//Author: Joshua Smith
//Course: CPT 187
//Purpose: Supportive Class for MainClass, handles orders for sod made by user
//Create Date: 12/6/2019
package edu.cpt187.smith.particiapation;
//Random Num Generator Import
import java.util.Random;

public class SodOrder 
{
	//Constants
	private final double TAX_RATE = 0.075;
	private int ZERO_TOTAL = 0;
	
	//Non-Constants 
	private int[] itemCounts;
	private int[] discountCounts;
	private int[] prizeCounts;
	private char discountType = ' ';
	private String itemName = "";
	private double itemPrice = 0.0;
	private String discountName = "";
	private double discountRate = 0.0;
	private int howMany = 0;
	private int lastItemSelectedIndex = 0;
	private Random prizeGenerator = new Random();
	private String prizeName = "";
	
	//Default Constructor
	public SodOrder()
	{
		
	}//End of Constructor 
	public void setItemCountArray(int borrowedRecordCount) //sets itemCounts size to borrowedRecordCount
	{
		if (itemCounts == null || borrowedRecordCount > itemCounts.length)
		{
		  itemCounts = new int[borrowedRecordCount];
		}
	}//End of set item count array
	public void setItemSelection(int borrowedSearchIndex)
	{
		lastItemSelectedIndex = borrowedSearchIndex;
	}//End of setItemSelection
	public void setItemName(String[] borrowedItemNames)
	{
		itemName = borrowedItemNames[lastItemSelectedIndex];
	}//End of setItemName
	public void setItemPrice(double[] borrowedItemPrices)
	{
		itemPrice = borrowedItemPrices[lastItemSelectedIndex];
		itemCounts[lastItemSelectedIndex] = itemCounts[lastItemSelectedIndex] + 1;
	}//End of setItemPrice
	public void setHowMany(int borrowedHowMany)
	{
		howMany = borrowedHowMany;
	}//End of setHowMany
	public void setDiscountType(char borrowedMenuSelection)
	{
		discountType = borrowedMenuSelection;
	}//End of setDiscountType
	public void setDiscountName(String[] borrowedDiscountNames)
	{
		//Sets discount counts to the length of that borrowed array
		if(discountCounts == null)
		{
			discountCounts = new int[borrowedDiscountNames.length];
		}
		
		if(discountType == 'A')//If based on discount type to SET the discount name
		{
			discountName = borrowedDiscountNames[0];
		}
		else if(discountType == 'B')
		{
			discountName = borrowedDiscountNames[1];
		}
		else
		{
			discountName = borrowedDiscountNames[2];
		}
	}//End of setDiscountName
	public void setDiscountRate(double[] borrowedDiscountRates)
	{
		if(discountType == 'A')//If based on discount type to SET the discount rate
		{
			discountRate = borrowedDiscountRates[0];
			discountCounts[0] += 1;
		}
		else if(discountType == 'B')
		{
			discountRate = borrowedDiscountRates[1];
			discountCounts[1] += 1;
		}
		else
		{
			discountRate = borrowedDiscountRates[2];
			discountCounts[2] += 1;
		}
	}//End of setDiscountRate
	public void setPrizeName(String[] borrowedPrizeNames)
	{
		//Sets the length of the itemCounts array
		if(prizeCounts == null)
		{
			prizeCounts = new int[borrowedPrizeNames.length];
		}
		
		prizeName = borrowedPrizeNames[getRandomNumber(borrowedPrizeNames)];
		if(prizeName.equals(borrowedPrizeNames[0]))
		{
			prizeCounts[0] += 1;
		}
		else if(prizeName.equals(borrowedPrizeNames[1]))
		{
			prizeCounts[1] += 1;
		}
		else
		{
			prizeCounts[2] += 1;
		}
	}//End of setPrizeName
	public void setDecreaseInStock(Inventory borrowedInventoryObject)
	{
		borrowedInventoryObject.setReduceStock(howMany);
	}//End of setDecrease In Stock
	
	//GETTERS
	public int getInStockCount(int[] borrowedStockCount)
	{
		return borrowedStockCount[lastItemSelectedIndex];
	}
	public String getItemName()
	{
		return itemName;
	}//End of getItemName
	public double getItemPrice()
	{
		return itemPrice;
	}//End of getItemPrice
	public int getHowMany()
	{
		return howMany;
	}//End of getHowMany
	public String getDiscountName()
	{
		return discountName;
	}//End of getDiscountName
	public double getDiscountRate()
	{
		return discountRate;
	}//End of getDiscountRate
	public double getDiscountAmt()
	{
		return discountRate * itemPrice;
	}//End of getDiscountAmt
	public double getDiscountPrice()
	{
		return itemPrice - getDiscountAmt();
	}//End of getDiscountPrice
	public double getSubTotal()
	{
		return howMany *  getDiscountPrice();
	}//End of getSubTotal
	public double getTaxRate()
	{
		return TAX_RATE;
	}//End of getTaxRate
	public double getTaxAmt()
	{
		return getSubTotal() * TAX_RATE;
	}//End of getTaxAmt
	public double getTotalCost()
	{
	  if (discountType == ' ')
	  {
	    return ZERO_TOTAL;
	  }
	  else
	  {
	    return getSubTotal() + getTaxAmt();
	  }
	}//End of get total cost
	public int[] getItemCounts()
	{
		return itemCounts;
	}//End of getItemCounts
	public int[] getDiscountCounts()
	{
		return discountCounts;
	}//End of getDiscountCounts
	public int[] getPrizeCounts()
	{
		return prizeCounts;
	}//End of getPrizeCounts
	public String getPrizeName()
	{
		return prizeName;
	}//End of getPrizeName
	public int getRandomNumber(String[] borrowedPrizeNames)
	{
		return prizeGenerator.nextInt(borrowedPrizeNames.length);
	}//End of getRandomNumber
}
